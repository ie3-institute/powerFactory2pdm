plugins {
	id 'groovy' // groovy support
	id 'java' // java support
	id 'scala' // scala support
	id 'pmd' //code check, working on source code
	id 'com.diffplug.spotless' version '5.16.0'//code format
	id "org.sonarqube" version "3.3" // sonarqube
	id 'org.scoverage' version '7.0.0' // Code coverage plugin for scala
	id "com.github.maiflai.scalatest" version "0.31" // run scalatest without specific spec task
}

ext {
	javaVersion = JavaVersion.VERSION_11
	scalaVersion = '2.13'
	scalaBinaryVersion = '2.13.6'
	slf4jVersion = '1.7.32'
	circeVersion = '0.14.1'
	scriptsLocation = 'gradle' + File.separator + 'scripts' + File.separator //location of script plugins
}

apply from: scriptsLocation + 'pmd.gradle'
apply from: scriptsLocation + 'spotless.gradle'
apply from: scriptsLocation + 'checkJavaVersion.gradle'
apply from: scriptsLocation + 'scoverage.gradle'
apply from: scriptsLocation + 'sonarqube.gradle'

configurations {
	scalaCompilerPlugin
}

repositories {
	//searches in Maven Central
	mavenCentral()

	// allows github repos as dependencies
	maven { url 'https://www.jitpack.io' }

	// sonatype snapshot repo
	maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
}

dependencies {

	// json parsing
	implementation "io.circe:circe-generic_${scalaVersion}:${circeVersion}"
	implementation "io.circe:circe-parser_${scalaVersion}:${circeVersion}"

	// https://mvnrepository.com/artifact/org.scalameta/scalafmt-interfaces
	implementation group: 'org.scalameta', name: 'scalafmt-interfaces', version: '3.0.5'
	// https://mvnrepository.com/artifact/org.scalameta/scalafmt-dynamic
	implementation group: 'org.scalameta', name: "scalafmt-dynamic_${scalaVersion}", version: '3.0.5'


	implementation('com.github.ie3-institute:PowerSystemDataModel:2.0.1') {
		exclude group: 'org.slf4j', module: 'slf4j-api'
		/* Exclude our own nested dependencies */
		exclude group: 'com.github.ie3-institute'
	}

	// Graphs
	implementation group: 'org.jgrapht', name: 'jgrapht-core', version: '1.5.1'

	// config //
	//implementation 'com.typesafe:config:+'
	implementation "com.github.pureconfig:pureconfig_${scalaVersion}:0.16.0"

	// cmd args parser //
	implementation "com.github.scopt:scopt_${scalaVersion}:+"

	// ieÂ³ internal repository
	implementation 'com.github.ie3-institute:PowerSystemUtils:1.5.3'

	// logging
	implementation "org.slf4j:slf4j-api:${slf4jVersion}"  // slf4j wrapper
	implementation 'com.lmax:disruptor:3.4.4' // async logging
	implementation 'org.apache.logging.log4j:log4j-api:+' // log4j
	implementation 'org.apache.logging.log4j:log4j-core:+' // log4j
	implementation 'org.apache.logging.log4j:log4j-slf4j-impl:+' // log4j -> slf4j

	implementation "com.typesafe.scala-logging:scala-logging_${scalaVersion}:3.9.4" // akka scala logging
	implementation 'com.typesafe.scala-logging:scala-logging-slf4j_2.11:2.1.2'// scala logging
	implementation "org.slf4j:log4j-over-slf4j:${slf4jVersion}" // slf4j -> log4j

	// CORE Scala //
	implementation "org.scala-lang:scala-library:${scalaBinaryVersion}"

	// TEST Scala //
	testImplementation "org.scalatest:scalatest_${scalaVersion}:3.2.9"
	testImplementation 'com.vladsch.flexmark:flexmark-all:0.35.10'

	// Linter Scala //
	implementation "com.sksamuel.scapegoat:scalac-scapegoat-plugin_${scalaBinaryVersion}:1.4.10" // scala scapegoat
	scalaCompilerPlugin "com.sksamuel.scapegoat:scalac-scapegoat-plugin_${scalaBinaryVersion}:1.4.9" // scala scapegoat
}

/* scapegoat hook configuration
 * https://github.com/sksamuel/scapegoat
 * using compileScala instead of tasks.withType(ScalaCompile) prevents applying scapegoat to scala test classes
 * see https://docs.gradle.org/current/userguide/scala_plugin.html#sec:configure_scala_classpath for details
 */
compileScala {
	scalaCompileOptions.additionalParameters = [
		"-Xplugin:" + configurations.scalaCompilerPlugin.asPath,
		"-P:scapegoat:dataDir:" + buildDir + "/reports/scapegoat/src/",
		"-P:scapegoat:disabledInspections:VariableShadowing",
		"-P:scapegoat:ignoredFiles:.*/PowerFactoryGrid.scala" // see scapegoat-sbt page for this param
	]
}

// separate scapegoat report for test classes
compileTestScala {
	scalaCompileOptions.additionalParameters = [
		"-Xplugin:" + configurations.scalaCompilerPlugin.asPath,
		"-P:scapegoat:dataDir:" + buildDir + "/reports/scapegoat/testsrc/",
		"-P:scapegoat:disabledInspections:VariableShadowing"
	]
}
group = 'edu.ie3'
version = '0.1-SNAPSHOT'
description = 'powerFactory2psdm'
sourceCompatibility = javaVersion
targetCompatibility = javaVersion

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

tasks.withType(ScalaCompile) {
	options.forkOptions.jvmArgs += [
		'-Xmx4096m',
		'-Xss4m',
		'-Xms2048m',
		'-XX:+UseParallelGC',
		'-XX:MaxInlineLevel=20'
	]
	options.compilerArgs += [
		'-Xmx4096m',
		'-Xss4m',
		'-Xms2048m',
		'-XX:+UseParallelGC',
		'-XX:MaxInlineLevel=20'
	]
}
